import hashlib
import logging
import requests
from config import CYBERSILO_API_URL, CYBERSILO_API_TOKEN

def calculate_file_hash(file_data):
    """Calculate SHA256 hash of file data."""
    sha256_hash = hashlib.sha256()
    sha256_hash.update(file_data)
    return sha256_hash.hexdigest()

def check_hash_malicious(file_hash):
    """Check if the hash is malicious using CyberSilo API."""
    try:
        headers = {
            'Authorization': f'Bearer {CYBERSILO_API_TOKEN}',
            'Content-Type': 'application/json'
        }
        payload = {
            'pattern': file_hash
        }
        
        logging.info(f"Checking hash {file_hash} against CyberSilo API")
        response = requests.post(CYBERSILO_API_URL, headers=headers, json=payload)
        
        if response.status_code == 200:
            data = response.json()
            # Check if data field has any entries
            return 'data' in data and len(data['data']) > 0
        else:
            logging.error(f"API request failed with status code {response.status_code}: {response.text}")
            
    except Exception as e:
        logging.error(f"Error checking hash {file_hash}: {str(e)}")
    
    return False  # Not malicious by default